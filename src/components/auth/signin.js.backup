// React imports
import React, { useState } from "react";

// Paper
import { useFonts, Poppins_400Regular } from "@expo-google-fonts/poppins";
import { StyleSheet, View } from "react-native";
import { Text } from "react-native-paper";
import { TextInput } from "react-native-paper";
import { Button } from "react-native-paper";

// My imports
// import { SessionContext, useSession } from "../../contexts/SessionContext";
// import { signin } from "../../services/firebaseAuth";

const SignIn = (props) => {
  const { navigate } = props.navigation;
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [errors, setErrors] = useState();
  // const { session } = useSession(SessionContext);
  var session = {
    email: "bill.mccann@gmail.com",
    password: "thisisnotmypassword",
  };
  const handleSubmit = (e) => {
    e.preventDefault();
    // authenticate();  // The funcion run to authenticate
  };
  // const classes = useStyles();

  // firebase signin function
  const authenticate = () => {
    const results = validate(
      {
        email: email,
        password: password,
      },
      {
        email: constraints.email,
        password: constraints.password,
      }
    );

    if (results) {
      setErrors(results);
    } else {
      setErrors(null);
      // signin(email, password); // Used to authenticate
    }
  };

  // Load the fonts needed on this page
  let [fontsLoaded] = useFonts({
    Poppins_400Regular,
  });

  return (
    <View>
      {session.email ?  navigate("SignIn") : null}
      <form onSubmit={handleSubmit}>
        <View>
          <Text>WELCOME</Text>
          <Text>Sign in with</Text>
          <Text>your Email</Text>
        </View>
        <View>
          <TextInput
            id="userid"
            error={!!(errors && errors.emailAddress)}
            helperText={
              errors && errors.emailAddress ? errors.emailAddress[0] : ""
            }
            label="EMAIL ADDRESS"
            placeholder="Type email address"
            required
            type="outlined"
            value={email}
            onChangeText={(e) => setEmail(e.target.value)}
          />
          <TextInput
            id="password"
            error={!!(errors && errors.password)}
            helperText={errors && errors.password ? errors.password[0] : ""}
            label="Password"
            placeholder="Type password"
            type="outlined"
            value={password}
            onChangeText={(e) => setPassword(e.target.value)}
          />
        </View>
        <View>
          <Button
            type="contained"
          >
            Sign in
          </Button>
          <Text>Create account</Text>
        </View>
      </form>
    </View>
  );
};

const styles = StyleSheet.create({
  page: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "#0091FF",
  },
  titleText: {
    fontSize: 46,
    height: 60,
    fontFamily: "Poppins_600SemiBold",
    padding: 0,
    margin: 0,
  },
  tagLine: {
    fontSize: 18,
    fontFamily: "Poppins_300Light",
    textAlign: "center",
    width: 250,
    padding: 0,
    margin: 0,
  },
});

export default SignIn;
